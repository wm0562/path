<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.path.dao.PathtimeoutMapper">
  <resultMap id="BaseResultMap" type="com.path.bean.Pathtimeout">
    <id column="timeout_id" jdbcType="INTEGER" property="timeoutId" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="path_id" jdbcType="INTEGER" property="pathId" />
    <result column="cs_path" jdbcType="VARCHAR" property="csPath" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="entrytime" jdbcType="DATE" property="entrytime" />
    <result column="t_days" jdbcType="VARCHAR" property="tDays" />
  </resultMap>
  <resultMap id="BaseResultMap1" type="com.path.bean.Pathtimeoutnew">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="psex" jdbcType="VARCHAR" property="psex" />
    <result column="cs_path" jdbcType="VARCHAR" property="csPath" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="entrytime" jdbcType="DATE" property="entrytime" />
    <result column="day" jdbcType="VARCHAR" property="day" />
    <result column="t_days" jdbcType="VARCHAR" property="tDays" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    timeout_id, pid, path_id, cs_path, status, entrytime, t_days
  </sql>
  <select id="selectByExample" parameterType="com.path.bean.PathtimeoutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from path_timeout
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from path_timeout
    where timeout_id = #{timeoutId,jdbcType=INTEGER}
  </select>
  <select id="selectByInputValuePat"  parameterType="java.lang.String" resultMap="BaseResultMap1">
    select p.pid,p.pname,p.psex,t.cs_path,t.status,t.entrytime,a.day,t.t_days FROM  path_timeout t 
    left join patient p on t.pid=p.pid left join path a on t.path_id=a.path_id
    where t.pid =#{inputvalue}  or t.cs_path like concat('%',#{inputvalue},'%')
  </select>
  <select id="getljchaoshi"  resultMap="BaseResultMap1">
    select p.pid,p.pname,p.psex,t.cs_path,t.status,t.entrytime,a.day,t.t_days FROM  path_timeout t 
    left join patient p on t.pid=p.pid left join path a on t.path_id=a.path_id
  </select>
  <select id="selectByKey"  parameterType="java.lang.Integer"  resultMap="BaseResultMap1">
    select p.pid,p.pname,p.psex,t.cs_path,t.status,t.entrytime,a.day,t.t_days FROM  path_timeout t 
    left join patient p on t.pid=p.pid left join path a on t.path_id=a.path_id
    where t.pid = #{timeoutId,jdbcType=INTEGER}
  </select>
   <select id="checkLjchaoshi"  parameterType="com.path.bean.Pathtimeoutnew"  resultMap="BaseResultMap1">
    select 
    <include refid="Base_Column_List" />
    from path_timeout
    where timeout_id = #{timeoutId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from path_timeout
    where timeout_id = #{timeoutId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.path.bean.PathtimeoutExample">
    delete from path_timeout
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.path.bean.Pathtimeout">
    insert into path_timeout (timeout_id, pid, path_id, cs_path, status, 
      entrytime, t_days)
    values (#{timeoutId,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{pathId,jdbcType=INTEGER}, #{csPath,jdbcType=VARCHAR},
      #{status,jdbcType=VARCHAR}, #{entrytime,jdbcType=DATE}, #{tDays,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.path.bean.Pathtimeout">
    insert into path_timeout
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="timeoutId != null">
        timeout_id,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="pathId != null">
        path_id,
      </if>
      <if test="csPath != null">
        cs_path,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="entrytime != null">
        entrytime,
      </if>
      <if test="tDays != null">
        t_days,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="timeoutId != null">
        #{timeoutId,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pathId != null">
        #{pathId,jdbcType=INTEGER},
      </if>
      <if test="csPath != null">
        #{csPath,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="entrytime != null">
        #{entrytime,jdbcType=DATE},
      </if>
      <if test="tDays != null">
        #{tDays,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.path.bean.PathtimeoutExample" resultType="java.lang.Long">
    select count(*) from path_timeout
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update path_timeout
    <set>
      <if test="record.timeoutId != null">
        timeout_id = #{record.timeoutId,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.pathId != null">
        path_id = #{record.pathId,jdbcType=INTEGER},
      </if>
      <if test="record.csPath != null">
        cs_path = #{record.csPath,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.entrytime != null">
        entrytime = #{record.entrytime,jdbcType=DATE},
      </if>
      <if test="record.tDays != null">
        t_days = #{record.tDays,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update path_timeout
    set timeout_id = #{record.timeoutId,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      path_id = #{record.pathId,jdbcType=INTEGER},
      cs_path = #{record.csPath,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      entrytime = #{record.entrytime,jdbcType=DATE},
      t_days = #{record.tDays,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.path.bean.Pathtimeout">
    update path_timeout
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="pathId != null">
        path_id = #{pathId,jdbcType=INTEGER},
      </if>
      <if test="csPath != null">
        cs_path = #{csPath,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="entrytime != null">
        entrytime = #{entrytime,jdbcType=DATE},
      </if>
      <if test="tDays != null">
        t_days = #{tDays,jdbcType=VARCHAR},
      </if>
    </set>
    where timeout_id = #{timeoutId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.path.bean.Pathtimeout">
    update path_timeout
    set pid = #{pid,jdbcType=INTEGER},
      path_id = #{pathId,jdbcType=INTEGER},
      cs_path = #{csPath,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      entrytime = #{entrytime,jdbcType=DATE},
      t_days = #{tDays,jdbcType=VARCHAR}
    where timeout_id = #{timeoutId,jdbcType=INTEGER}
  </update>
</mapper>