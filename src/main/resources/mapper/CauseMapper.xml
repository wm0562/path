<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.path.dao.CauseMapper">
  <resultMap id="BaseResultMap" type="com.path.bean.Cause">
    <id column="cause_id" jdbcType="INTEGER" property="causeId" />
    <result column="dep_id" jdbcType="INTEGER" property="depId" />
    <result column="path_id" jdbcType="INTEGER" property="pathId" />
    <result column="dep_name" jdbcType="VARCHAR" property="depName" />
    <result column="rjbr" jdbcType="VARCHAR" property="rjbr" />
    <result column="cjbr" jdbcType="VARCHAR" property="cjbr" />
    <result column="cause" jdbcType="VARCHAR" property="cause" />
  </resultMap>
  
  <resultMap id="BaseResultMap1" type="com.path.bean.Causenew">
    <id column="dep_name" jdbcType="INTEGER" property="depName" />
    <result column="cname" jdbcType="INTEGER" property="cname" />
    <result column="rjbr" jdbcType="VARCHAR" property="rjbr" />
    <result column="cjbr" jdbcType="VARCHAR" property="cjbr" />
    <result column="cause" jdbcType="VARCHAR" property="cause" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cause_id, dep_id, path_id, dep_name, rjbr, cjbr, cause
  </sql>
  <select id="selectByExample" parameterType="com.path.bean.CauseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cause
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cause
    where cause_id = #{causeId,jdbcType=INTEGER}
  </select>
  <select id="selectByInputValueCau"  parameterType="java.lang.String" resultMap="BaseResultMap1">
    select d.dep_name,p.cname,c.rjbr,c.cjbr,c.cause FROM
    cause c left join  department d on c.dep_id=d.dep_id left join path p on c.path_id=p.path_id
    where d.dep_name like concat('%',#{inputvalue},'%')  or p.cname like concat('%',#{inputvalue},'%')
  </select>
  <select id="getcause"  resultMap="BaseResultMap1">
    select d.dep_name,p.cname,c.rjbr,c.cjbr,c.cause FROM
    cause c left join  department d on c.dep_id=d.dep_id left join path p on c.path_id=p.path_id
  </select>
  <select id="selectByKey"  parameterType="java.lang.Integer"  resultMap="BaseResultMap1">
    select d.dep_name,p.cname,c.rjbr,c.cjbr,c.cause FROM
    cause c left join  department d on c.dep_id=d.dep_id left join path p on c.path_id=p.path_id
    where d.dep_name like concat('%',#{chujId},'%')
  </select>
   <select id="checkCause"  parameterType="com.path.bean.Causenew"  resultMap="BaseResultMap1">
    select 
    <include refid="Base_Column_List" />
    from cause
    where cause_id = #{causeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cause
    where cause_id = #{causeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.path.bean.CauseExample">
    delete from cause
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.path.bean.Cause">
    insert into cause (cause_id, dep_id,
      path_id, rjbr, cjbr, 
      cause)
    values (#{causeId,jdbcType=INTEGER}, #{depId,jdbcType=INTEGER}, 
      #{pathId,jdbcType=INTEGER}, #{rjbr,jdbcType=VARCHAR}, #{cjbr,jdbcType=VARCHAR}, 
      #{cause,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.path.bean.Cause">
    insert into cause
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="causeId != null">
        cause_id,
      </if>
      <if test="depId != null">
        dep_id,
      </if>
      <if test="pathId != null">
        path_id,
      </if>
      <if test="rjbr != null">
        rjbr,
      </if>
      <if test="cjbr != null">
        cjbr,
      </if>
      <if test="cause != null">
        cause,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="causeId != null">
        #{causeId,jdbcType=INTEGER},
      </if>
      <if test="depId != null">
        #{depId,jdbcType=INTEGER},
      </if>
      <if test="pathId != null">
        #{pathId,jdbcType=INTEGER},
      </if>
      <if test="rjbr != null">
        #{rjbr,jdbcType=VARCHAR},
      </if>
      <if test="cjbr != null">
        #{cjbr,jdbcType=VARCHAR},
      </if>
      <if test="cause != null">
        #{cause,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.path.bean.CauseExample" resultType="java.lang.Long">
    select count(*) from cause
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cause
    <set>
      <if test="record.causeId != null">
        cause_id = #{record.causeId,jdbcType=INTEGER},
      </if>
      <if test="record.depId != null">
        dep_id = #{record.depId,jdbcType=INTEGER},
      </if>
      <if test="record.pathId != null">
        path_id = #{record.pathId,jdbcType=INTEGER},
      </if>
      <if test="record.rjbr != null">
        rjbr = #{record.rjbr,jdbcType=VARCHAR},
      </if>
      <if test="record.cjbr != null">
        cjbr = #{record.cjbr,jdbcType=VARCHAR},
      </if>
      <if test="record.cause != null">
        cause = #{record.cause,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cause
    set cause_id = #{record.causeId,jdbcType=INTEGER},
      dep_id = #{record.depId,jdbcType=INTEGER},
      path_id = #{record.pathId,jdbcType=INTEGER},
      rjbr = #{record.rjbr,jdbcType=VARCHAR},
      cjbr = #{record.cjbr,jdbcType=VARCHAR},
      cause = #{record.cause,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.path.bean.Cause">
    update cause
    <set>
      <if test="depId != null">
        dep_id = #{depId,jdbcType=INTEGER},
      </if>
      <if test="pathId != null">
        path_id = #{pathId,jdbcType=INTEGER},
      </if>
      <if test="rjbr != null">
        rjbr = #{rjbr,jdbcType=VARCHAR},
      </if>
      <if test="cjbr != null">
        cjbr = #{cjbr,jdbcType=VARCHAR},
      </if>
      <if test="cause != null">
        cause = #{cause,jdbcType=VARCHAR},
      </if>
    </set>
    where cause_id = #{causeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.path.bean.Cause">
    update cause
    set dep_id = #{depId,jdbcType=INTEGER},
      path_id = #{pathId,jdbcType=INTEGER},
      rjbr = #{rjbr,jdbcType=VARCHAR},
      cjbr = #{cjbr,jdbcType=VARCHAR},
      cause = #{cause,jdbcType=VARCHAR}
    where cause_id = #{causeId,jdbcType=INTEGER}
  </update>
</mapper>